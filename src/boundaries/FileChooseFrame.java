/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package boundaries;

import imageresizer.Main;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.function.Consumer;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author lepioo
 */
public class FileChooseFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form mainFrame
     */
    private FileNameExtensionFilter filtreImg;
    public FileChooseFrame() {
        initComponents();
        // --- Creation des filtres
        filtreImg = new FileNameExtensionFilter("Image files", "png","jpg","jpeg","aif","aiff","gif");
        fileChooser.setFileFilter(filtreImg);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();

        fileChooser.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.setMultiSelectionEnabled(true);
        fileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserActionPerformed
        List<File> picFiles = new ArrayList<File>();
        File[] files = this.fileChooser.getSelectedFiles();
        for (int i = 0; i < files.length; i++) {
            if (!files[i].isDirectory()) {
                picFiles.add(files[i]);
            } else {
                picFiles = Stream.concat(picFiles.stream(), getImagesInDirectory(files[i]).stream()).collect(Collectors.toList());
            }
        }
        MainFrame.instance.onFileChoice(picFiles);
    }//GEN-LAST:event_fileChooserActionPerformed
    private List<File> getImagesInDirectory(File dir) {
        List<File> picFiles = new ArrayList<File>();
        File[] files = dir.listFiles(new ImageFileFilter());
        for (int i = 0; i < files.length; i++) {
            if (!files[i].isDirectory()) {
                picFiles.add(files[i]);
            } else {
                picFiles = Stream.concat(picFiles.stream(), getImagesInDirectory(files[i]).stream()).collect(Collectors.toList());
            }
        }
        return picFiles;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser fileChooser;
    // End of variables declaration//GEN-END:variables
}
